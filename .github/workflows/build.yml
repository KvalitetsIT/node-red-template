# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
# Set docker image names.
      - name: Setup env variables
        run: |
          echo "DOCKER_SERVICE=kvalitetsit/node-red-template" >> $GITHUB_ENV
          echo "repo ${{ github.repository }}"
          echo "URL: ${{ github.event.repository.url }}"

# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

# Login to docker hub using secrets in GitHub.
      - name: Login to docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

# if below step is skipped this build is a tag build. Can be used for skipping other steps.
      - name: Is Tag Build
        id: tag
        if:  ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}        

# Build
      - name: Build and test
        run: ./build/build.sh ${{ env.DOCKER_SERVICE }}

# Push to Github
      - name: Tag service git id docker image
        run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:${{ github.sha }}

      - name: Tag service dev docker image
        run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:dev

      - name: Push dev docker image.
        run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:dev

      - name: Push service git id docker image.
        run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ github.sha }}

      - name: Push latest service docker image
        if: ${{ steps.tag.conclusion != 'skipped' }}
        run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:latest

      - name: Tag version service docker image
        if: ${{ steps.tag.conclusion != 'skipped' }}
        run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:${{ steps.tag.outputs.VERSION }}

      - name: Push version service docker image.
        if: ${{ steps.tag.conclusion != 'skipped' }}
        run: ./build/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ steps.tag.outputs.VERSION }}
